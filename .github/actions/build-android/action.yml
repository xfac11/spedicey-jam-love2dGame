# Adapted from:
# - https://love2d.org/wiki/Game_Distribution
# - https://github.com/love2d/love-android
# - https://github.com/love2d/love-android/wiki/Game-Packaging
# - https://github.com/love-actions/love-actions-android
name: Build Android
description: Creates Android builds
inputs:
  build_num:
    description: Build number
    required: true
  build_type:
    description: Build type (release/debug)
    required: true
  android_cmdline_tools_version:
    description: Android cmdline-tools version
    required: false
    default: '11076708'
  android_java_version:
    description: Android Java JDK version
    required: false
    default: '17'
  android_love_version:
    description: LÃ–VE version for Android to use
    required: false
    default: '11.5a'
  android_orientation:
    description: Android screen orientation
    required: false
    default: 'landscape'
  android_record:
    description: Android microphone access - NoRecord or Record
    required: false
    default: 'NoRecord'
  android_version_code:
    description: Android version code
    required: false
    default: '1'
  product_file:
    description: The basename of the file to be generated
    required: true
  product_id:
    description: Product ID - reverse domain name
    required: true
  product_name:
    description: Product name
    required: true
  output_folder:
    description: Output folder path
    required: true
runs:
  using: composite
  steps:
    - name: Install tools
      uses: ./.github/actions/install-tools
    - name: Checkout love-android ${{ inputs.android_love_version }}
      uses: actions/checkout@v4
      with:
        repository: love2d/love-android
        ref: ${{ inputs.android_love_version }}
        submodules: recursive
        path: ./tools/love-android
        fetch-depth: 1
    - name: Checkout lua-https
      uses: actions/checkout@v4
      with:
        repository: oval-tutu/lua-https
        submodules: recursive
        path: ./tools/love-android/love/src/jni/lua-modules/lua-https
        ref: android
        fetch-depth: 1
    - name: Copy love assets
      shell: bash
      run: rsync -av --exclude='.gitkeep' ./game/* ./tools/love-android/app/src/embed/assets/
    - name: Modify gradle.properties
      shell: bash
      run: |
        # Convert PRODUCT_NAME to bytes and format as comma-separated decimal numbers
        utf8_byte_array=$(echo -n "${{ inputs.product_name }}" | od -An -t u1 | tr '\n' ' ' | sed 's/ \+/ /g' | sed 's/^ *//;s/ *$//' | tr ' ' ',')
        sed -i "s/^#app.name=.*/#app.name=${{ inputs.product_name }}/" ./tools/love-android/gradle.properties
        sed -i "s/^app.name_byte_array=.*/app.name_byte_array=${utf8_byte_array}/" ./tools/love-android/gradle.properties
        sed -i "s/^app.application_id=.*/app.application_id=${{ inputs.product_id }}/" ./tools/love-android/gradle.properties
        sed -i "s/^app.orientation=.*/app.orientation=${{ inputs.android_orientation }}/" ./tools/love-android/gradle.properties
        # version_code is an always incrementing integer so app stores can
        # track versions, but not the actual version number
        sed -i "s/^app.version_code=.*/app.version_code=${{ inputs.android_version_code }}/" ./tools/love-android/gradle.properties
        if [ "${{ inputs.build_type }}" == "release" ]; then
          sed -i "s/^app.version_name=.*/app.version_name=${{ inputs.product_version }}/" ./tools/love-android/gradle.properties
        else
          sed -i "s/^app.version_name=.*/app.version_name=${{ inputs.build_num }}/" ./tools/love-android/gradle.properties
        fi
        cat ./tools/love-android/gradle.properties
    - name: Update android:label in AndroidManifest.xml
      shell: bash
      run: sed -i "s/\${NAME}/${{ inputs.product_name }}/" ./tools/love-android/app/src/main/AndroidManifest.xml
    - name: Replace icons
      shell: bash
      run: |
        convert ./resources/icon.png -resize 48x48 ./tools/love-android/app/src/main/res/drawable-mdpi/love.png
        convert ./resources/icon.png -resize 72x72 ./tools/love-android/app/src/main/res/drawable-hdpi/love.png
        convert ./resources/icon.png -resize 96x96 ./tools/love-android/app/src/main/res/drawable-xhdpi/love.png
        convert ./resources/icon.png -resize 144x144 ./tools/love-android/app/src/main/res/drawable-xxhdpi/love.png
        convert ./resources/icon.png -resize 192x192 ./tools/love-android/app/src/main/res/drawable-xxxhdpi/love.png
        convert ./resources/icon.png -resize 512x512 ./tools/love-android/love_icon_512x512.png
    - name: Get Java ${{ inputs.android_java_version }}
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: ${{ inputs.android_java_version }}
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3.2.2
      with:
        cmdline-tools-version: ${{ inputs.android_cmdline_tools_version }}
        packages: >-
          tools
          platform-tools
          platforms;android-34
          build-tools;33.0.1
          ndk;25.2.9519653
        log-accepted-android-sdk-licenses: false
    - name: Build Android debug .apk
      if: ${{ inputs.build_type == 'dev' }}
      shell: bash
      run: |
        pushd ./tools/love-android
          ./gradlew assembleEmbed${{ inputs.android_record }}Debug
        popd
        unzip -l ./tools/love-android/app/build/outputs/apk/*/debug/app-embed-*-debug.apk | grep -i '.so'
        mkdir -p ${{ inputs.output_folder }}/apk/debug
        mv -v ./tools/love-android/app/build/outputs/apk/*/debug/app-embed-*-debug.apk ${{ inputs.output_folder }}/apk/debug/${{ inputs.product_file }}-debug.apk
    - name: Build Android release .apk
      shell: bash
      run: |
        pushd ./tools/love-android
          ./gradlew assembleEmbed${{ inputs.android_record }}Release
        popd
        unzip -l ./tools/love-android/app/build/outputs/apk/*/release/app-embed-*-release-unsigned.apk | grep -i '.so'
        mkdir -p ${{ inputs.output_folder }}/apk/release
        mv -v ./tools/love-android/app/build/outputs/apk/*/release/app-embed-*-release-unsigned.apk ${{ inputs.output_folder }}/apk/release/${{ inputs.product_file }}-release.apk
    - name: Build Android .aab
      if: ${{ inputs.build_type == 'release' }}
      shell: bash
      run: |
        pushd ./tools/love-android
          ./gradlew bundleEmbed${{ inputs.android_record }}Release
        popd
        unzip -l ./tools/love-android/app/build/outputs/bundle/*/app-embed-*-release.aab | grep -i '.so'
        mkdir -p ${{ inputs.output_folder }}/aab/release
        mv -v ./tools/love-android/app/build/outputs/bundle/*/app-embed-*-release.aab ${{ inputs.output_folder }}/aab/release/${{ inputs.product_file }}-release.aab
